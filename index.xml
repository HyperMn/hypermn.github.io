<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>个人随笔</title>
    <link>http://www.hypermn.cn/</link>
    <description>Recent content on 个人随笔</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2018-2022 HyperMn</copyright>
    <lastBuildDate>Wed, 10 Aug 2022 23:59:59 +0800</lastBuildDate>
    
        <atom:link href="http://www.hypermn.cn/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>回家两周，治好了我的精神内耗</title>
        <link>http://www.hypermn.cn/posts/mental-internal-friction/</link>
        <pubDate>Wed, 10 Aug 2022 23:59:59 +0800</pubDate>
        
        <guid>http://www.hypermn.cn/posts/mental-internal-friction/</guid>
        <description>个人随笔 http://www.hypermn.cn/posts/mental-internal-friction/ -&lt;h2 id=&#34;everything-changes&#34;&gt;Everything changes&lt;/h2&gt;
&lt;p&gt;由于种种原因，几乎一年快没有更新博客了。如果这是一片农田早已杂草四生，然而这是赛博世界，一切照旧。快一年过去了，我的生活变了很多，世界也变了很多。&lt;/p&gt;
&lt;p&gt;其中一个重要原因是我从一名本科生变成了研究生。所有本科认识的好友几乎都分散在了全世界各地，我也或主动或被迫地送走老朋友，认识新朋友。我并不是一个守旧的人，但是这个过程还是有些阵痛。&lt;/p&gt;
&lt;p&gt;我的一位好朋友离开了人世。他很聪明，也很放荡不羁。他活得很洒脱，很独特，连离开也在所有人的意料之外。虽然不在一个城市，我甚至已经两年多没有见过他，但他还是对我影响极大的一位朋友。我对很多新奇事物的尝试都是在他的引导之下，包括对这个世界的看法也有他独特经历的一份构成。我尊重且佩服他对一切的选择，希望他在另一个世界继续他的潇洒。&lt;/p&gt;
&lt;p&gt;虽然不是些什么大变化，川大也变了很多。&lt;/p&gt;
&lt;p&gt;江安图书馆门前邻接长桥处原本是阶梯，其中有两处已经变成了斜坡。对此我非常高兴，之所以对此这么在意是因为本科时骑电动车，偶尔在旁边狭长的斜坡需要等待通行以及调整角度缓缓上下坡。&lt;/p&gt;
&lt;p&gt;望江西门的沃尔玛关店了。看到朋友圈一位成都同学写了一长篇文章来讲述他对沃尔玛十几年来的印象，十分感慨。不知不觉我在成都也已经待了五年，想来如果有一天我常去的哪家店变迁，我也会有同样的感慨吧。&lt;/p&gt;
&lt;p&gt;望江里面拆了不少楼，修成了草坪，西侧也修了不少新建筑，新开放了健身中心和游泳馆。想来几年后整个校区会看起来更现代，更美观。初来川大时，如果不开导航任凭我自己在学校里乱走，经常走到小区间迷了路。小区几乎都是上世纪修建的筒子楼，晚上看着还有些瘆人。以后的新生也许不会对望江有这种印象了。&lt;/p&gt;
&lt;h2 id=&#34;精神内耗&#34;&gt;精神内耗&lt;/h2&gt;
&lt;p&gt;7月底终于是完成了手头的工作，准备回家歇息两周。回家的路上飞机晚点，被迫改签高铁坐了绿皮火车回家。不断等待的期间想了乱七八糟的很多问题。甚至折磨女朋友一块进行自以为的哲学思考，最后什么也没有想通。当然，没想通也不影响继续活着。&lt;/p&gt;
&lt;p&gt;原本的计划是回家之后去伊犁看看草原河谷，旅游几天。然而一回家全国疫情四起，伊犁更是直接封城。妈妈也有腰椎间盘突出的毛病，去医院住院调养。家里只有我和我爸两人，于是我就天天待在家里给做饭准备材料，洗碗，收拾家里内务。做了几天之后忽然觉得我妈是很伟大一个人。每天工作之后还要做饭洗碗收拾内务，我觉得这是极其消耗意志力的事，但她几十年如一日的坚持，也很少抱怨什么。&lt;/p&gt;
&lt;p&gt;忽然就想起了二舅，当时看完视频也并没有觉得有什么不妥。只是觉得这位up充满小资的语调和配乐与二舅&lt;em&gt;苦&lt;/em&gt;中作乐的生活有些不搭。两天后看到知乎上对这个视频的很多评价，有些不解。诚然，大多数苦难并不是天然发生的，甚至是通过抗争有可能会避免的。但摆脱苦难的重担需要付出的成本也是未知的，甚至这个过程也许就是苦难的一部分。也许中国人传承下来的内涵就是避其锋芒，逆来顺受。当然不是想要宣扬忍受苦难，只是如果苦难在当下是无法避免的，我们只有换个方式fuck the world。也许当时up主只是想像他的其他视频一样，借他的二舅恰一份钱，没有想到引起了轩然大波，很多细节并不经得起大众几千万双眼睛下推敲。&lt;/p&gt;
&lt;p&gt;窗外还在不停地响着喇叭播报“请各位居民赶快回家，疫情防控人人有责”，一个没有疫情发生，天天都在核酸的小县城还在用可笑的方式“防疫”。联想今天随机指派一个中风险地区的县城，不知道防疫闹剧到底要持续多久呢。不过比起两年前没有病例就封控一个多月，居民们确实应该感恩科学防疫了。新疆也许是个好地方，但不是现在。&lt;/p&gt;
- http://www.hypermn.cn/posts/mental-internal-friction/ - 2018-2022 HyperMn</description>
        </item>
    
    
    
        <item>
        <title>C语言学习一些推荐的IDE</title>
        <link>http://www.hypermn.cn/posts/c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%BA%9B%E6%8E%A8%E8%8D%90%E7%9A%84ide/</link>
        <pubDate>Tue, 14 Sep 2021 19:19:42 +0800</pubDate>
        
        <guid>http://www.hypermn.cn/posts/c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%BA%9B%E6%8E%A8%E8%8D%90%E7%9A%84ide/</guid>
        <description>个人随笔 http://www.hypermn.cn/posts/c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%BA%9B%E6%8E%A8%E8%8D%90%E7%9A%84ide/ -&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;工欲善其事，必先利其器。集成开发环境 (Integrated development environment)，简称IDE，是一种辅助程序开发人员编写程序的软件。在学习C语言的过程中我使用过很多不同的IDE，下面根据我的个人使用感受做一些C语言的IDE推荐。不过，无论大家使用怎样的IDE，多动手写代码才是最关键的，不必在IDE上的选择上过多纠结。&lt;/p&gt;
&lt;h1 id=&#34;c语言推荐的ide&#34;&gt;C语言推荐的IDE&lt;/h1&gt;
&lt;p&gt;下文中轻量、项目只是我个人对它们的理解。&lt;/p&gt;
&lt;h2 id=&#34;win10系统&#34;&gt;win10系统：&lt;/h2&gt;
&lt;h3 id=&#34;轻量适合编写简单程序&#34;&gt;轻量：适合编写简单程序&lt;/h3&gt;
&lt;p&gt;dev-cpp和code blocks是两款很有年头的软件了，用于写简单的程序非常方便，缺点也是功能比较少，界面不够现代化，胜在简单好用。&lt;/p&gt;
&lt;p&gt;VSCode，微软的一款编辑器，在扩展的加持下功能强大，也是我的主力编辑器。不过使用它编写各种程序需要自己折腾，配置一下编译器、扩展等设置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dev-Cpp：&lt;a href=&#34;https://sourceforge.net/projects/orwelldevcpp/&#34;&gt;Dev-C++ download | SourceForge.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code Blocks：&lt;a href=&#34;https://sourceforge.net/projects/codeblocks/&#34;&gt;Code::Blocks download | SourceForge.net&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VSCode：可以参考win10系统使用VSCode配置C语言环境：
&lt;a href=&#34;https://zhuanlan.zhihu.com/p/298168673&#34;&gt;https://zhuanlan.zhihu.com/p/298168673&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;项目功能强大用起来也比上面的ide麻烦一些&#34;&gt;项目：功能强大，用起来也比上面的IDE麻烦一些&lt;/h3&gt;
&lt;p&gt;CLion，JetBrains全家桶中的一员，功能非常非常强大，对学生免费，需要自行注册。&lt;/p&gt;
&lt;p&gt;Visual Studio，被很多人称为宇宙第一IDE，很适合用来写C/C++/C#等程序。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CLion：&lt;a href=&#34;https://www.jetbrains.com/clion/&#34;&gt;CLion: A Cross-Platform IDE for C and C++ by JetBrains&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VS2019：&lt;a href=&#34;https://visualstudio.microsoft.com/zh-hans/vs/&#34;&gt;Visual Studio IDE: 面向开发人员的一体式编程工具 (microsoft.com)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;mac系统&#34;&gt;Mac系统：&lt;/h2&gt;
&lt;p&gt;对MacOS不是很熟悉，所以只能推荐上面软件的mac版了。&lt;/p&gt;
&lt;h3 id=&#34;轻量vscode&#34;&gt;轻量：VSCode&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;可以参考mac下使用VSCode配置C语言环境：&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://segmentfault.com/a/1190000039129854&#34;&gt;mac vscode c++ 环境配置及异常的语法提示 - SegmentFault 思否&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;项目clion-or-xcode&#34;&gt;项目：CLion or XCode&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CLion：对学生免费，需要自行注册&lt;a href=&#34;https://www.jetbrains.com/clion/&#34;&gt;CLion: A Cross-Platform IDE for C and C++ by JetBrains&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;XCode：AppStore下载&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;P.S: 上面的链接都是我随手搜索的，如果有问题的话大家可以在搜索引擎上搜索同样的内容多看几篇其他博客的教程。&lt;/p&gt;
&lt;h1 id=&#34;在线编辑器&#34;&gt;在线编辑器&lt;/h1&gt;
&lt;p&gt;很多网站也提供了C语言的在线编辑器，在有网络但是没有配置开发环境的情况下也可以暂时使用在线编辑器。随便列举几个：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://c.runoob.com/compile/11/&#34;&gt;C 在线工具 | 菜鸟工具 (runoob.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.w3cschool.cn/tryrun/runcode?lang=c-clang&#34;&gt;c-clang在线开发工具，在线编译IDE_w3cschool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.acwing.com/file_system/file/content/whole/index/content/172575/&#34;&gt;AC Editor (acwing.com)&lt;/a&gt;(需要注册，btw这个网站对想学算法的同学挺不错的)&lt;/p&gt;
- http://www.hypermn.cn/posts/c%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0%E4%B8%80%E4%BA%9B%E6%8E%A8%E8%8D%90%E7%9A%84ide/ - 2018-2022 HyperMn</description>
        </item>
    
    
    
        <item>
        <title>推荐一些提高工作效率的PC端软件</title>
        <link>http://www.hypermn.cn/posts/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%BA%9B%E6%8F%90%E9%AB%98%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E7%9A%84pc%E7%AB%AF%E8%BD%AF%E4%BB%B6/</link>
        <pubDate>Sun, 22 Aug 2021 00:50:05 +0800</pubDate>
        
        <guid>http://www.hypermn.cn/posts/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%BA%9B%E6%8F%90%E9%AB%98%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E7%9A%84pc%E7%AB%AF%E8%BD%AF%E4%BB%B6/</guid>
        <description>个人随笔 http://www.hypermn.cn/posts/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%BA%9B%E6%8F%90%E9%AB%98%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E7%9A%84pc%E7%AB%AF%E8%BD%AF%E4%BB%B6/ -&lt;h1 id=&#34;前言&#34;&gt;前言&lt;/h1&gt;
&lt;p&gt;一直很想写这篇文章，来推荐我常用的一些非常好用的软件。主要基于以下两个理由：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这类软件让我相见恨晚，极大地提高了我使用电脑的效率。&lt;/li&gt;
&lt;li&gt;这类软件多数是免费软件，我想对于一款免费又好用的软件来说，最大的尊重就是向身边的朋友推荐它们。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;由于博主使用的是Windows系统，所以只体验过这些软件在Windows下的使用，并且有些软件只有Windows版本。&lt;/p&gt;
&lt;p&gt;考虑到受众，文章主要分为通用软件和编程相关两个部分。&lt;/p&gt;
&lt;h1 id=&#34;通用软件推荐&#34;&gt;通用软件推荐&lt;/h1&gt;
&lt;h2 id=&#34;listary&#34;&gt;Listary&lt;/h2&gt;
&lt;p&gt;亲测比Everything更好用的搜索工具！&lt;/p&gt;
&lt;h2 id=&#34;增强版的windows剪切板&#34;&gt;增强版的Windows剪切板&lt;/h2&gt;
&lt;h2 id=&#34;snipate&#34;&gt;Snipate&lt;/h2&gt;
&lt;h2 id=&#34;小丸工具箱&#34;&gt;小丸工具箱&lt;/h2&gt;
&lt;h2 id=&#34;internet-download-manager&#34;&gt;Internet Download Manager&lt;/h2&gt;
&lt;h2 id=&#34;wiztree&#34;&gt;wiztree&lt;/h2&gt;
&lt;h2 id=&#34;typora&#34;&gt;Typora&lt;/h2&gt;
&lt;h2 id=&#34;mathpix&#34;&gt;MathPix&lt;/h2&gt;
&lt;h1 id=&#34;编程相关软件推荐&#34;&gt;编程相关软件推荐&lt;/h1&gt;
&lt;h2 id=&#34;mobaxterm&#34;&gt;MobaXTerm&lt;/h2&gt;
&lt;h2 id=&#34;windows-terminal&#34;&gt;Windows Terminal&lt;/h2&gt;
&lt;h2 id=&#34;visual-studio-code&#34;&gt;Visual Studio Code&lt;/h2&gt;
- http://www.hypermn.cn/posts/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%BA%9B%E6%8F%90%E9%AB%98%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E7%9A%84pc%E7%AB%AF%E8%BD%AF%E4%BB%B6/ - 2018-2022 HyperMn</description>
        </item>
    
    
    
        <item>
        <title>CentOS7上进行公网单实例的Coturn &#43; Pixel Streaming的配置</title>
        <link>http://www.hypermn.cn/posts/centos7%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%85%AC%E7%BD%91%E5%8D%95%E5%AE%9E%E4%BE%8B%E7%9A%84coturn&#43;pixel-streaming%E7%9A%84%E9%85%8D%E7%BD%AE/</link>
        <pubDate>Tue, 17 Aug 2021 12:49:05 +0800</pubDate>
        
        <guid>http://www.hypermn.cn/posts/centos7%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%85%AC%E7%BD%91%E5%8D%95%E5%AE%9E%E4%BE%8B%E7%9A%84coturn&#43;pixel-streaming%E7%9A%84%E9%85%8D%E7%BD%AE/</guid>
        <description>个人随笔 http://www.hypermn.cn/posts/centos7%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%85%AC%E7%BD%91%E5%8D%95%E5%AE%9E%E4%BE%8B%E7%9A%84coturn&#43;pixel-streaming%E7%9A%84%E9%85%8D%E7%BD%AE/ -&lt;ul&gt;
&lt;li&gt;博主使用的服务器操作系统：CentOS7 x86_64&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;coturn安装与配置&#34;&gt;coturn安装与配置&lt;/h1&gt;
&lt;h2 id=&#34;安装需要的依赖包&#34;&gt;安装需要的依赖包&lt;/h2&gt;
&lt;h3 id=&#34;gcc-g-openssl-libevent-devel等&#34;&gt;GCC G++ OpenSSL Libevent-devel等&lt;/h3&gt;
&lt;h3 id=&#34;libevent&#34;&gt;libevent&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在http://libevent.org/下载libevent-2.1.8-stable.tar.gz（最新版即可，不必完全一致，但和coturn、openssl版本有一些对应关系）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;tar -zxvf libevent-2.1.8-stable.tar.gz&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cd libevent-2.1.8-stable&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;/configure&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;make&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;make install&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;默认安装在/usr/local/lib，也会输出“Libraries have been installed in:   Path Name”，表明已经安装在了Path Name下。&lt;/p&gt;
&lt;h2 id=&#34;安装coturn&#34;&gt;安装Coturn&lt;/h2&gt;
&lt;p&gt;其他博主多数推荐从GitHub下载coturn源码编译的方法，但是编译经常会报各种各样的错误，所以对于要求不高的用户，直接采用通过yum等方式安装本地包，在下方的网址下载对应的二进制包文件后本地安装即可。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pkgs.org/download/coturn&#34;&gt;Coturn Download (APK, DEB, RPM, TXZ, XZ, ZST) (pkgs.org)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ubuntu系统自带apt-get，或者在安装了apt包管理器的情况下，也可以通过&lt;code&gt;apt-get install coturn&lt;/code&gt;的方式直接安装，可能需要更换镜像源或apt-get upgrade来更新仓库。&lt;/p&gt;
&lt;h2 id=&#34;coturn配置&#34;&gt;Coturn配置&lt;/h2&gt;
&lt;p&gt;参考了&lt;a href=&#34;https://www.jianshu.com/p/915eab39476d&#34;&gt;coturn穿透服务器搭建 - 简书 (jianshu.com)&lt;/a&gt;的做法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;code&gt;ifconfig&lt;/code&gt;命令检查网卡和私网地址&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;code&gt;openssl req -x509 -newkey rsa:2048 -keyout /etc/turn_server_pkey.pem -out /etc/turn_server_cert.pem -days 99999 -nodes&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;来在/etc/下生成公钥和私钥，中间的信息可以不填，一路回车即可。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改配置文件&lt;code&gt;turnserver.conf&lt;/code&gt;，可以使用命令&lt;code&gt;whereis turnserver&lt;/code&gt;来查看turnserver.conf的所在路径，一般在&lt;code&gt;/etc/&lt;/code&gt;下或是&lt;code&gt;/etc/coturn/&lt;/code&gt;下，listening-ip与relay-ip采用内网ip，external-ip是外网的ip&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;relay-device=eth0   #与前ifconfig查到的网卡名称一致
listening-ip=172.18.77.60    #内网IP
listening-port=3478
tls-listening-port=5349
relay-ip=172.18.77.60
external-ip=47.107.110.xxx    #公网IP
relay-threads=50
lt-cred-mech
cert=/etc/turn_server_cert.pem
pkey=/etc/turn_server_pkey.pem
pidfile=”/var/run/turnserver.pid”
min-port=49000
max-port=50000
user=user:12345678    #用户名密码，创建IceServer时用
cli-password=123456 #
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记得删除所有#注释内容&lt;/p&gt;
&lt;h3 id=&#34;stunturn配置测试&#34;&gt;STUN/TURN配置测试&lt;/h3&gt;
&lt;p&gt;输入以下命令开启turnserver进行测试&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;turnserver -a -f -user&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;user:12345678
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;具体参数可以参考&lt;a href=&#34;https://www.cnblogs.com/mobilecard/p/6542294.html&#34;&gt;turnserver 配置说明记录 - 磨叽开发者 - 博客园 (cnblogs.com)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后在google提供的如下地址可以进行stun/turn连通性的测试&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/&#34;&gt;Trickle ICE (webrtc.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;配置pixel-streaming的信令服务器&#34;&gt;配置Pixel Streaming的信令服务器&lt;/h1&gt;
&lt;h3 id=&#34;安装node服务器&#34;&gt;安装node服务器&lt;/h3&gt;
&lt;h3 id=&#34;配置ue4提供的信令服务器&#34;&gt;配置UE4提供的信令服务器&lt;/h3&gt;
&lt;p&gt;从&lt;code&gt;C:\Program Files\Epic Games\UE_4.26\Engine\Source\Programs\PixelStreaming\WebServers\SignallingWebServer&lt;/code&gt;下复制全部内容至服务器上&lt;/p&gt;
&lt;p&gt;修改config.json中的stun/turn的ip:port以及user,pswd为自己所配置的内容。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;UseFrontend&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;UseMatchmaker&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;UseHTTPS&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;UseAuthentication&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;LogToFile&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;HomepageFile&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;player.htm&amp;#34;&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;AdditionalRoutes&amp;#34;&lt;/span&gt;: {},
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;EnableWebserver&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;peerConnectionOptions&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{\&amp;#34;offerExtmapAllowMixed\&amp;#34;: false, \&amp;#34;iceServers\&amp;#34;: [{\&amp;#34;urls\&amp;#34;: [\&amp;#34;stun:42.193.xxx.xxx:3478\&amp;#34;,\&amp;#34;turn:42.193.xxx.xxx:3478\&amp;#34;], \&amp;#34;username\&amp;#34;: \&amp;#34;user\&amp;#34;, \&amp;#34;credential\&amp;#34;: \&amp;#34;pswd\&amp;#34;}] }&amp;#34;&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;steamerPort&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;18888&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;httpPort&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;66&lt;/span&gt;,
	&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;publicIp&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;47.98.xxx.xxx&amp;#34;&lt;/span&gt;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;测试一下信令服务器运行&lt;code&gt;node cirrus --configFile=&#39;./config.json&#39;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;持久化运行node&#34;&gt;持久化运行node&lt;/h3&gt;
&lt;p&gt;如果想持久运行node，可以参考另一篇文章&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.hypermn.cn/posts/%E4%BD%BF%E7%94%A8pm2%E8%BF%90%E8%A1%8Cnode.js%E6%9C%8D%E5%8A%A1/&#34;&gt;使用PM2运行node.js服务 (hypermn.cn)&lt;/a&gt;&lt;/p&gt;
- http://www.hypermn.cn/posts/centos7%E4%B8%8A%E8%BF%9B%E8%A1%8C%E5%85%AC%E7%BD%91%E5%8D%95%E5%AE%9E%E4%BE%8B%E7%9A%84coturn&#43;pixel-streaming%E7%9A%84%E9%85%8D%E7%BD%AE/ - 2018-2022 HyperMn</description>
        </item>
    
    
    
        <item>
        <title>使用PM2运行node.js服务</title>
        <link>http://www.hypermn.cn/posts/%E4%BD%BF%E7%94%A8pm2%E8%BF%90%E8%A1%8Cnode.js%E6%9C%8D%E5%8A%A1/</link>
        <pubDate>Thu, 12 Aug 2021 13:28:06 +0800</pubDate>
        
        <guid>http://www.hypermn.cn/posts/%E4%BD%BF%E7%94%A8pm2%E8%BF%90%E8%A1%8Cnode.js%E6%9C%8D%E5%8A%A1/</guid>
        <description>个人随笔 http://www.hypermn.cn/posts/%E4%BD%BF%E7%94%A8pm2%E8%BF%90%E8%A1%8Cnode.js%E6%9C%8D%E5%8A%A1/ -&lt;h1 id=&#34;why-pm2&#34;&gt;Why PM2&lt;/h1&gt;
&lt;p&gt;PM2 是一个带有负载均衡功能的 Node 应用的进程管理器。&lt;/p&gt;
&lt;p&gt;当你要把你的独立代码利用全部的服务器上的所有 CPU，并保证进程永远都活着，0 秒的重载， PM2 是完美的。&lt;/p&gt;
&lt;h3 id=&#34;特性&#34;&gt;特性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;内建负载均衡（使用Node cluster 集群模块）&lt;/li&gt;
&lt;li&gt;后台运行&lt;/li&gt;
&lt;li&gt;0秒停机重载(维护升级的时候不需要停机).&lt;/li&gt;
&lt;li&gt;具有Ubuntu和CentOS 的启动脚本&lt;/li&gt;
&lt;li&gt;停止不稳定的进程（避免无限循环）&lt;/li&gt;
&lt;li&gt;控制台检测&lt;/li&gt;
&lt;li&gt;提供 HTTP API&lt;/li&gt;
&lt;li&gt;远程控制和实时的接口API ( Nodejs 模块,允许和PM2进程管理器交互 )&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;使用&#34;&gt;使用&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;npm install -g pm2&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;pm2 start 命令 &amp;ndash; 参数，例如&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-crmsh&#34; data-lang=&#34;crmsh&#34;&gt;pm2 start node -- index.js
pm2 start app.js        // 启动
pm2 start app.js -i max //启动 使用所有CPU核心的集群
pm2 stop app.js         // 停止
pm2 stop all            // 停止所有
pm2 restart app.js      // 重启
pm2 restart all         // 重启所有
pm2 delete  app.js      // 关闭
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;一个例子&#34;&gt;一个例子&lt;/h2&gt;
&lt;p&gt;假如你执行的命令是&lt;code&gt;node ./index.js --A=192.168.0.170:8080 --BN=test&lt;/code&gt;，那么pm2就是&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-crmsh&#34; data-lang=&#34;crmsh&#34;&gt;pm2 start node -- ./index.js --A=192.168.0.170:8080 --BN=test
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;官方文档&#34;&gt;官方文档&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://pm2.keymetrics.io/docs/usage/quick-start/&#34;&gt;PM2 - Quick Start (keymetrics.io)&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;p&gt;作者：&lt;a href=&#34;http://quanke.name/&#34;&gt;全科&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.jianshu.com/p/7b7378deb3e5&#34;&gt;使用PM2运行node.js服务 - 简书 (jianshu.com)&lt;/a&gt;&lt;/p&gt;
- http://www.hypermn.cn/posts/%E4%BD%BF%E7%94%A8pm2%E8%BF%90%E8%A1%8Cnode.js%E6%9C%8D%E5%8A%A1/ - 2018-2022 HyperMn</description>
        </item>
    
    
    
        <item>
        <title>LaTex测试</title>
        <link>http://www.hypermn.cn/posts/latex%E6%B5%8B%E8%AF%95/</link>
        <pubDate>Thu, 05 Aug 2021 16:09:06 +0800</pubDate>
        
        <guid>http://www.hypermn.cn/posts/latex%E6%B5%8B%E8%AF%95/</guid>
        <description>个人随笔 http://www.hypermn.cn/posts/latex%E6%B5%8B%E8%AF%95/ -&lt;h1 id=&#34;latex&#34;&gt;LaTeX&lt;/h1&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
a^2 + b^2 = c_2\\
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;需要在文章的json配置里添加：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;markup: mmark&lt;/code&gt;&lt;/p&gt;
- http://www.hypermn.cn/posts/latex%E6%B5%8B%E8%AF%95/ - 2018-2022 HyperMn</description>
        </item>
    
    
    
        <item>
        <title>使用GitHub Actions进行Hugo自动部署</title>
        <link>http://www.hypermn.cn/posts/%E5%9F%BA%E4%BA%8Egithub-actions%E7%9A%84hugo%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E6%B5%8B%E8%AF%95/</link>
        <pubDate>Sun, 25 Jul 2021 01:20:05 +0800</pubDate>
        
        <guid>http://www.hypermn.cn/posts/%E5%9F%BA%E4%BA%8Egithub-actions%E7%9A%84hugo%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E6%B5%8B%E8%AF%95/</guid>
        <description>个人随笔 http://www.hypermn.cn/posts/%E5%9F%BA%E4%BA%8Egithub-actions%E7%9A%84hugo%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E6%B5%8B%E8%AF%95/ -&lt;p&gt;Congrats！&lt;/p&gt;
&lt;p&gt;这是基于GitHub Actions的Hugo自动部署测试，如果看到了这篇博文，说明自动部署成功啦！&lt;/p&gt;
&lt;p&gt;简而言之，通过配置服务器端的rsync，ssh的公钥和私钥，以及GitHub repo的设置，完成向仓库push即可自动构建部署博客的功能。&lt;/p&gt;
&lt;p&gt;重度参考了&lt;a href=&#34;https://atutang.com/2021/05/hugo-automatic-deploy/&#34;&gt;使用GITHUB ACTION进行HUGO的自动化部署 | 阿凸日记 (atutang.com)&lt;/a&gt;和&lt;a href=&#34;https://blog.lancitou.net/using-github-actions-to-deploy-hugo-blog-to-self-hosted-vps/&#34;&gt;利用 GitHub Actions 自动部署 Hugo 博客到自建 VPS - 烂磁头 - 好记性不如烂磁头 (lancitou.net)&lt;/a&gt;，感谢这两位大佬orz&lt;/p&gt;
- http://www.hypermn.cn/posts/%E5%9F%BA%E4%BA%8Egithub-actions%E7%9A%84hugo%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E6%B5%8B%E8%AF%95/ - 2018-2022 HyperMn</description>
        </item>
    
    
    
        <item>
        <title>2020年度总结</title>
        <link>http://www.hypermn.cn/posts/2020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</link>
        <pubDate>Thu, 31 Dec 2020 14:30:05 +0800</pubDate>
        
        <guid>http://www.hypermn.cn/posts/2020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</guid>
        <description>个人随笔 http://www.hypermn.cn/posts/2020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/ -&lt;p&gt;时间永是流驶，2020年已经走到了最后一天。2019年年末的时候，看到一句话，“2019年可能是未来十年最好的一年”。当时不以为然，每年都有人说当年是最好的一年或最坏的一年，也有“这是最好的时代也是最坏的时代”这种没营养的空话一直在被反复地提及。不过今年过完，2020年新冠疫情的爆发可能让2019年确实成为了未来十年最好的一年。毕竟即使疫苗出来了，经济社会等方面的影响还是要很多年来消除。单说疫情本身，国内疫情控制得相当好，第一季度后对大家的影响已经没有那么大了。不过纵观全球，还是有许许多多的国家至今仍然深受新冠病毒的折磨。尤其是穷苦百姓，受制于医疗体系或是经济状况，感染病毒后无法尽快得到救助。作为健康的旁观者，我们是可以像Trump那样评论一句“Perhaps that’s the story of life”。不过当疾病真的降临在我们身边，当一条条鲜活的生命缓缓消逝时，还是希望疫情早些结束，世界和平。&lt;/p&gt;
&lt;p&gt;不过假如没有疫情，我所处的大三下-大四上这一年本身也是很多人的转折点。即将离开学校之时，不得不为未来做出一个选择，但大家也并没有做好做选择以及为选择付出沉重代价的心理准备。年轻人大体的路不外乎考研、保研、出国、gap、工作、考公、在家啃老这几条路。好一点的学校期望高升学率，鼓吹不保研的同学们去考研、出国。然后当你考研出国失败的时候，学校又期望一个高就业率，鼓吹大家有工作签了就行。虽然学校大体还是起到一个督促的作用，但个中滋味只有经历过的人才自己体会的到。但这时也不得不说一句，人生就是一场均值回归。你不会永远好运，也不会永远倒霉。最后逃脱不了你真正的价值，然后落在附近。有高考爆炸的同学本科一直保持优秀的成绩，保去了很好的学校。有高中时不可一世的同学，到了大学被不断打击，泯然众人。所以，不要把希望寄托于好运或是他人手上，努力提高自己的价值才是正道。&lt;/p&gt;
&lt;p&gt;2020年对我来说也是意义非凡的一年。一年之间，经历了保研、考研、工作的几个选择的反复摇摆，心理承受能力应该是又上了一个台阶。很多很多次真的已经到了崩溃的边缘，又是一个个带来希望的消息，学长学姐家人朋友们的话语让人重新振作，继续前行。以及终于到了没有课业压力的大四，有时间去思考一些之前被搁置的问题，择偶观、美学以及其他乱七八糟的东西，也有时间去打各种游戏，研究健身、饮食以及维护这个日常不更新的博客。更有时间去认真看同学朋友们分享的他们认真生活的瞬间——vlog，推送，照片或者分享的一些想法，说真的看到大家分享自己的生活也激励到我认真地对待生活。&lt;/p&gt;
&lt;p&gt;2020年有很多快乐的瞬间。在复习计网复习到麻木的一天，在图书馆看到明远湖上明媚的阳光；在独山子的山上和老同学们眺望整个城市；静静地坐在家乡人工湖旁边什么也不干；真正体系化健身之后看到身材有了明显的变化；和川大ow群的群友们一起快乐内战。&lt;/p&gt;
&lt;p&gt;2020年有很多绝望的瞬间。和我妈打电话感觉保研无望，考研来不及，工作也找不到；吴院莫名其妙的保研细则公布；和同学喝酒喝到第二天浑身乏力还得去开组会；在某几个抑郁的时段感觉自己丧失了说话欲望。&lt;/p&gt;
&lt;p&gt;翻看qq空间的那年今日，去年今日的大家大部分还是在元气满满地迎接2020年的到来，不知道大家在一年过完后是不是对这一年比较满意。在辞旧迎新的时刻，我们总是抱有很多美好的祝愿希望明年会更好。之前也和室友讨论过这个问题，这些人为设计的仪式感固然给了我们理由去做很多事（比如吃顿好的233），不过还是得意识到真正的改变依靠的是自己的努力。如习总书记所说，幸福是奋斗出来的。挥手告别2020，希望明年少些颓废多点奋斗。&lt;/p&gt;
&lt;p&gt;最后，还是想感谢2020年帮助过我的很多很多人。在期末考，保研，找工作，以及很多困难的时刻帮助我度过的善良的人们。点名表扬一下几位我特别想感谢的&lt;code&gt;萱姐、邱哥、柴姐&lt;/code&gt;以及几位&lt;code&gt;不愿透露姓名的室友&lt;/code&gt;，如果有缘读到这篇文章可以留言让我知道你们听到了我的夸奖哈哈哈。这是2020年HyperMn的最后一篇博客了，预祝大家2021新年快乐，万事如意！&lt;/p&gt;
- http://www.hypermn.cn/posts/2020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/ - 2018-2022 HyperMn</description>
        </item>
    
    
    
        <item>
        <title>vs2017&#43;opencv4.2&#43;opencv_contrib配置教程</title>
        <link>http://www.hypermn.cn/posts/vs2017&#43;opencv4.2&#43;opencv_contri%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</link>
        <pubDate>Sat, 19 Dec 2020 13:43:05 +0800</pubDate>
        
        <guid>http://www.hypermn.cn/posts/vs2017&#43;opencv4.2&#43;opencv_contri%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</guid>
        <description>个人随笔 http://www.hypermn.cn/posts/vs2017&#43;opencv4.2&#43;opencv_contri%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/ -&lt;p&gt;主要是结合了这两篇博文的方法，各有一些额外的坑没有提到。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_44327116/article/details/110129723&#34;&gt;VS2019+opencv4.2.0+opencv contrib4.2.0&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.pianshen.com/article/4295962091/&#34;&gt;opencv-contrib3.4.1编译及配置步骤，opencv_ffmpeg.dll、ippicv等失败的解决方法&lt;/a&gt;、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;博主机器环境：win10 64位+vs2017&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;准备工作&#34;&gt;准备工作&lt;/h1&gt;
&lt;h2 id=&#34;新版cmake下载安装&#34;&gt;新版cmake下载安装&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;下载地址：&lt;a href=&#34;https://cmake.org/download/&#34;&gt;https://cmake.org/download/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;选择对应平台和版本的Installer即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.hypermn.cn/image-20201219135202397.png&#34; alt=&#34;image-20201219135202397&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;opencv和opencv_contrib下载&#34;&gt;OpenCV和OpenCV_contrib下载&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;选择合适的OpenCV &lt;strong&gt;release版本&lt;/strong&gt;（注意&lt;strong&gt;不是&lt;/strong&gt;源代码版本！）此处是4.2release版本的&lt;a href=&#34;https://github.com/opencv/opencv/releases/tag/4.2.0&#34;&gt;github下载地址&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在OpenCV_contrib的github仓库的&lt;strong&gt;Tag&lt;/strong&gt;里选择和OpenCV版本号&lt;strong&gt;相同&lt;/strong&gt;的OpenCV_contrib源代码版本，此处是4.2版本的&lt;a href=&#34;https://github.com/opencv/opencv_contrib/releases/tag/4.2.0&#34;&gt;github下载地址&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;安装opencv&#34;&gt;安装OpenCV&lt;/h1&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;说是安装不如说是提取，&lt;strong&gt;用管理员权限&lt;/strong&gt;打开下载好的OpenCV release版本，放在合适的位置，我的路径是&lt;code&gt;D:\OpenCV&lt;/code&gt;，会自动在选择的文件下新建一个opencv文件夹。&lt;/p&gt;
&lt;p&gt;把opencv_contri的源代码解压到&lt;code&gt;D:\OpenCV&lt;/code&gt;里，我们再手动新建一个build文件夹用于过会cmake编译&lt;/p&gt;
&lt;p&gt;完成之后的样子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.hypermn.cn/image-20201219140411564.png&#34; alt=&#34;image-20201219140411564&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;cmake配置&#34;&gt;cmake配置&lt;/h1&gt;
&lt;p&gt;打开cmake，填写一下source code和build路径，然后点击左下角configure&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.hypermn.cn/image-20201219140807288.png&#34; alt=&#34;image-20201219140807288&#34;&gt;&lt;/p&gt;
&lt;p&gt;之后会让你选择generator，选择vs2017，下方平台选择x64。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.hypermn.cn/image-20201219183749486.png&#34; alt=&#34;image-20201219183749486&#34;&gt;&lt;/p&gt;
&lt;p&gt;一般由于网络原因，会遇到很多下载不了的文件。&lt;/p&gt;
&lt;p&gt;此时，可以给cmake命令挂个http代理，具体方法可以百度。&lt;/p&gt;
&lt;p&gt;如果没有挂代理的话（挂代理可以跳过本段了hhh），这时候就需要手动打开&lt;code&gt;D:\OpenCV\build\CMakeDownloadLog.txt&lt;/code&gt;查看，引用下前面参考博客老哥的原文&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;根据报错，解读信息：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;的地址打开出错文件CMakeDownloadlog.txt。文件位置参照下图，也可以直接在安装目录搜索文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;文件具体名字，后面有版本号，一定要一一对应！！！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;哈希值&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;下载地址&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://www.pianshen.com/images/653/9a23fe9f1c952a1b0fe37c82f77d4bed.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是老哥说的有点复杂了，其实就是用4的地址下载，下载完的文件放在&lt;code&gt;D:\OpenCV\opencv\sources\.cache&lt;/code&gt;里面的对应文件夹里面，并根据txt里的每个文件对应哈希值，改成文件夹里原来已有的文件名字，如下图（也是盗图）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.pianshen.com/images/797/b180f38ba2688ab65b7f73f7938f5a95.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后重新configure直到没有错误，我这里只有一个不需要的VTK的错误，而且描述称可以用选项来suppress it。&lt;/p&gt;
&lt;p&gt;那么就搜索opencv_e相关的选项，勾选opencv_enable_nonfree（不勾选的话没法使用一些申请过专利的库），&lt;/p&gt;
&lt;p&gt;也可以勾选opencv_world（可选），会生成opencv_world.lib，不过虽然方便，但是会在实际项目中造成冗余，添加不必要的库。&lt;/p&gt;
&lt;p&gt;填写contrib对应的路径，&lt;strong&gt;注意&lt;/strong&gt;路径里的斜杠是&lt;code&gt;/&lt;/code&gt;而不是&lt;code&gt;\&lt;/code&gt;，否则会把‘’\O’识别成转义字符而出现解析错误。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.hypermn.cn/image-20201219144550788.png&#34; alt=&#34;image-20201219144550788&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击generate，静静等待generate done。应该还是有一些文件下载不成功，可以check一下是不是自己要用的，然后重复上文中的方法下载，这里没有我要用的，所以可以skip。&lt;/p&gt;
&lt;p&gt;然后点击open project，在打开的vs2017里面点击生成-批生成。在弹出的窗口里面选择的 debug 和release的ALL_BUILD和INATALL，然后点击“生成”。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.hypermn.cn/image-20201219151326616.png&#34; alt=&#34;image-20201219151326616&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;环境项目配置&#34;&gt;环境+项目配置&lt;/h1&gt;
&lt;p&gt;就快要胜利了！以下引用一下另一位博主的&lt;a href=&#34;https://blog.csdn.net/weijifen000/article/details/93377143&#34;&gt;文章&lt;/a&gt;，快配完才发现这个博主已经写的很详细了，但是我还是踩了几个他文章里没讲到的坑&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;注意修改下方路径以及lib的版本号为自己需要的路径/版本！&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;h2 id=&#34;配置系统环境变量&#34;&gt;配置系统环境变量&lt;/h2&gt;
&lt;p&gt;生成结束之后，需要修改环境变量。&lt;/p&gt;
&lt;p&gt;环境变量在&lt;code&gt;“此电脑”-&amp;gt;“属性”-&amp;gt;“高级系统设置”-&amp;gt;“环境变量”&lt;/code&gt;，在用户变量里面的 Path 变量后面添加&lt;code&gt;之前CMake设置的build目录\install\x64\vc16\bin&lt;/code&gt;，确定，退出。&lt;/p&gt;
&lt;p&gt;如果 visual studio 在修改环境变量之前就打开了，需要重启visual studio&lt;/p&gt;
&lt;h2 id=&#34;重新配置项目环境&#34;&gt;重新配置项目环境&lt;/h2&gt;
&lt;p&gt;visual studio 中右击项目-&amp;gt;“属性”，
&lt;img src=&#34;https://imgconvert.csdnimg.cn/aHR0cDovL3d3MS5zaW5haW1nLmNuL2xhcmdlLzAwNjJhSU9FbHkxZzRhZWgyZWY2ZGozMGFjMGpqcTN6LmpwZw&#34; alt=&#34;img&#34;&gt;
首先可以选择“所有配置” “所有平台”，编辑包含目录和库目录
包含目录编辑为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;生成的 build 目录\install\include
生成的 build 目录\install\include\opencv2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;库目录编辑为：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;生成的 build 目录\install\x64\vc15\lib
（vc15对应vs2017，vc16对应2019，其余版本类推）
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://imgconvert.csdnimg.cn/aHR0cDovL3d3MS5zaW5haW1nLmNuL2xhcmdlLzAwNjJhSU9FbHkxZzRhZW00Y2g4Z2ozMG9tMGdvZGgyLmpwZw&#34; alt=&#34;img&#34;&gt;
&lt;img src=&#34;https://imgconvert.csdnimg.cn/aHR0cDovL3d3MS5zaW5haW1nLmNuL2xhcmdlLzAwNjJhSU9FbHkxZzRhZW9rdGlobWozMGo2MGJrMHRsLmpwZw&#34; alt=&#34;img&#34;&gt;
&lt;img src=&#34;https://imgconvert.csdnimg.cn/aHR0cDovL3d3MS5zaW5haW1nLmNuL2xhcmdlLzAwNjJhSU9FbHkxZzRhZXN3YTZodWozMG9hMGJtanNmLmpwZw&#34; alt=&#34;img&#34;&gt;
编辑包含目录和库目录之后，需要添加附加依赖项，此时需要分别针对 debug 和release两种模式添加。
打开 &lt;code&gt;生成的build目录\install\x64\vc15\lib&lt;/code&gt;可以发现每个lib文件都有两种，一种是以&lt;code&gt;d.lib&lt;/code&gt;结尾，另一种只比前一种少了一个d,只以&lt;code&gt;.lib&lt;/code&gt;结尾。debug模式需要&lt;code&gt;d.lib&lt;/code&gt;结尾文件，release模式需要&lt;code&gt;.lib&lt;/code&gt;结尾文件，任何一种模式配置错误，就不能以该模式运行opencv。
&lt;img src=&#34;https://imgconvert.csdnimg.cn/aHR0cDovL3d3MS5zaW5haW1nLmNuL2xhcmdlLzAwNjJhSU9FbHkxZzRhZXdwZGZiamozMGszMGlsanRrLmpwZw&#34; alt=&#34;img&#34;&gt;
所以需要在编辑附加依赖项时添加各自需要的文件名。
&lt;img src=&#34;https://imgconvert.csdnimg.cn/aHR0cDovL3d3MS5zaW5haW1nLmNuL2xhcmdlLzAwNjJhSU9FbHkxZzRhZjJkeHFpNGozMG9qMGdvZ21wLmpwZw&#34; alt=&#34;img&#34;&gt;
&lt;img src=&#34;https://imgconvert.csdnimg.cn/aHR0cDovL3d3MS5zaW5haW1nLmNuL2xhcmdlLzAwNjJhSU9FbHkxZzRhZjRobDBkZGozMG8zMGdmcTRhLmpwZw&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;420debug版本的lib：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;opencv_aruco420d.lib
opencv_bgsegm420d.lib
opencv_bioinspired420d.lib
opencv_calib3d420d.lib
opencv_ccalib420d.lib
opencv_core420d.lib
opencv_datasets420d.lib
opencv_dnn420d.lib
opencv_dnn_objdetect420d.lib
opencv_dpm420d.lib
opencv_face420d.lib
opencv_features2d420d.lib
opencv_flann420d.lib
opencv_fuzzy420d.lib
opencv_gapi420d.lib
opencv_hfs420d.lib
opencv_highgui420d.lib
opencv_imgcodecs420d.lib
opencv_imgproc420d.lib
opencv_img_hash420d.lib
opencv_line_descriptor420d.lib
opencv_ml420d.lib
opencv_objdetect420d.lib
opencv_optflow420d.lib
opencv_phase_unwrapping420d.lib
opencv_photo420d.lib
opencv_plot420d.lib
opencv_reg420d.lib
opencv_rgbd420d.lib
opencv_saliency420d.lib
opencv_shape420d.lib
opencv_stereo420d.lib
opencv_structured_light420d.lib
opencv_superres420d.lib
opencv_surface_matching420d.lib
opencv_text420d.lib
opencv_tracking420d.lib
opencv_video420d.lib
opencv_videoio420d.lib
opencv_videostab420d.lib
opencv_ximgproc420d.lib
opencv_xobjdetect420d.lib
opencv_xphoto420d.lib
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;420release版本的lib：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;opencv_aruco420.lib
opencv_bgsegm420.lib
opencv_bioinspired420.lib
opencv_calib3d420.lib
opencv_ccalib420.lib
opencv_core420.lib
opencv_datasets420.lib
opencv_dnn420.lib
opencv_dnn_objdetect420.lib
opencv_dpm420.lib
opencv_face420.lib
opencv_features2d420.lib
opencv_flann420.lib
opencv_fuzzy420.lib
opencv_gapi420.lib
opencv_hfs420.lib
opencv_highgui420.lib
opencv_imgcodecs420.lib
opencv_imgproc420.lib
opencv_img_hash420.lib
opencv_line_descriptor420.lib
opencv_ml420.lib
opencv_objdetect420.lib
opencv_optflow420.lib
opencv_phase_unwrapping420.lib
opencv_photo420.lib
opencv_plot420.lib
opencv_reg420.lib
opencv_rgbd420.lib
opencv_saliency420.lib
opencv_shape420.lib
opencv_stereo420.lib
opencv_structured_light420.lib
opencv_superres420.lib
opencv_surface_matching420.lib
opencv_text420.lib
opencv_tracking420.lib
opencv_video420.lib
opencv_videoio420.lib
opencv_videostab420.lib
opencv_ximgproc420.lib
opencv_xobjdetect420.lib
opencv_xphoto420.lib
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;结&#34;&gt;结&lt;/h1&gt;
&lt;p&gt;环境配好了就可以跑测试代码试一下了！&lt;/p&gt;
&lt;p&gt;花了一天多时间用在配opencv的cpp环境，踩了无数坑，怨念太深了。&lt;del&gt;GFW还是太阻碍技术进步了&lt;/del&gt;&lt;/p&gt;
- http://www.hypermn.cn/posts/vs2017&#43;opencv4.2&#43;opencv_contri%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/ - 2018-2022 HyperMn</description>
        </item>
    
    
    
        <item>
        <title>疫情时期的川大保研心路历程分享</title>
        <link>http://www.hypermn.cn/posts/%E5%85%B3%E4%BA%8E%E5%B7%9D%E5%A4%A7%E4%BF%9D%E7%A0%94%E7%9A%84%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/</link>
        <pubDate>Mon, 14 Dec 2020 15:47:05 +0800</pubDate>
        
        <guid>http://www.hypermn.cn/posts/%E5%85%B3%E4%BA%8E%E5%B7%9D%E5%A4%A7%E4%BF%9D%E7%A0%94%E7%9A%84%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/</guid>
        <description>个人随笔 http://www.hypermn.cn/posts/%E5%85%B3%E4%BA%8E%E5%B7%9D%E5%A4%A7%E4%BF%9D%E7%A0%94%E7%9A%84%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/ -&lt;h1 id=&#34;序&#34;&gt;序&lt;/h1&gt;
&lt;p&gt;几个月前，室友对当时处于极度焦虑情况下的我，在qq上说“我梦见你保研了，写下万字长文”。然后在几个月的今天，2020年9月27日，保研的结果公示也就在这几天了，我提前应验室友的梦境，不论是不是最后保上研了，先写一篇长文（写不写的到万字就随缘了），纪念这大半年的反复纠结的心路历程，纪念我在川大、在吴院度过的三年多时光。&lt;/p&gt;
&lt;h1 id=&#34;背景&#34;&gt;背景&lt;/h1&gt;
&lt;p&gt;大一大二时，我对未来的规划还是一片迷茫，对于读研、就业、出国并没有太多自己的想法。只能说是随波逐流地度过了本科的前两年时光。但也不断地了解信息，去参加学长学姐的交流分享会，去咨询留学中介，去听了很多场企业HR宣讲会。根据周围人的经验以及自己对很多事亲身经历得到的体会后，最后还是选择读研。&lt;/p&gt;
&lt;p&gt;准备保研时的大致情况：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GPA：3.71/4&lt;/li&gt;
&lt;li&gt;必修加权均分：88.24&lt;/li&gt;
&lt;li&gt;专业排名：56/374&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;准备&#34;&gt;准备&lt;/h1&gt;
&lt;p&gt;一二月份，还是想多参加一些科研项目和比赛鞭策一下自己学习。当时美赛和熟悉的同学组好了队，实验室那边跟学长做一个小比赛，然后导师提了个idea做大创，一切看起来都有条不紊。当时计划是回家一个月就返校打美赛，也订好了返程机票。然而突如其来的一场疫情打乱了所有计划。美赛只能线上进行…效率打了折扣，时间规划也很有问题。最后数据图表做了不少，但论文写的挺拉闸（甚至里面有句中文），遗憾拿S收场。跟学长做的比赛，一月初说忙完组会就继续，然后就没了音讯。最后大创天天在家也是进展缓慢（懒狗本狗），只是读了不少paper。唯一的收获就是天天在家闲着没事花40h完成黑暗之魂3一周目(?)。&lt;/p&gt;
&lt;p&gt;二月末三月初，随着新学期的网课开始，生活开始进入了一种奇妙的状态。家和学校错位两小时的时差让我实实在在感受了些许回国留学生上网课的痛苦。期间为了准备夏令营可能的机试，也为了给找工作留点后路，买了acwing的算法基础课，日日跟着刷题。此处强推一波yxc老师，如果大一能有老师这么系统地带着刷题，可能会给打acm留下一点点可能性。&lt;/p&gt;
&lt;p&gt;三月中下旬，和俩哥们一起办了健身卡，然后没过一周，疫情防控“特殊”时期，健身房又被勒令关门。每天感觉到无所事事，对未来也挺迷茫的。这期间也是听说了经管专业夏令营的惨状，由于头部大佬们放弃出国转为保研，形势比往年严峻了不少，往年能入营更好学校的同样条件的同学实际入营的学校都降了一个档次。&lt;/p&gt;
&lt;p&gt;四五月份，除了日常的刷算法题+打游戏的颓废套餐外，完成了几门选修课的结课作业/论文，就晃荡过去了…之后就准备大三下唯一一门必修课——编译原理的期末考试。考试本身倒不算很难，但题量出奇的大，考完大家都是叫苦连天，我也以为我是凉了，但是出成绩之后反倒是我大学生涯里唯一几门年级考前十的课…&lt;/p&gt;
&lt;p&gt;六月份，不管是对找工作，考研或者保研的同学，都是非常宝贵的一个月。不过正是在这种关头，计院给每一个同学都安排了一个月的IT企业实训课程。如果去500强企业实习可以代替这个实习。很不理解给我们明明不打算就业（打定心思就业的同学一般已经去校外实习了）的同学在这个节点参加这门实训的用意何在。但无论如何，六月一个月是硬磕在了这个破项目上。如果有后来的同学，强烈建议各种方式水过此课。&lt;/p&gt;
&lt;p&gt;七月初，终于各大夏令营可以开始投递了，我印象里投了南大，复旦，人大，武大，华科，东南，软件所等院校的夏令营，很受打击的是，一所都没过。是的，一所都没过。唯一庆幸的是川大还是对本校同学比较仁慈，虽然问我的B+树我都不知道回答的是对或不对…但是还是给了个优营。然后就看着身边大佬们手里的offer从发的最早的南大，再到复旦、人大、清深；而排名靠后的同学们又开始担心保研资格的问题了，焦虑最甚的一拨人建了考研群，提前为保研失败准备了planB。&lt;/p&gt;
&lt;h1 id=&#34;名额名额&#34;&gt;名额，名额&lt;/h1&gt;
&lt;p&gt;事实上同学们的担心确实不无道理，那就是吴院的名额真的很少。往年的保研人数一般是一百零几人，而今年17级一共182人，严格按50%的比例分配了名额，91个，往年都能递补一些的名额今年也消失不见。另外，教务老师曾经很有信心地说过让大家不要担心保研名额的问题，而直到9月开学吴院仍然没有拿出一个取消占比20%的专家面试后的替代方案。然后在九月底，全国都在确定保研资格的时候，方案千呼万唤始出来。方案很简单，那就是大家按专业学院的加分去准备，然后由数学学院的教授提出的加分归一化公式去归一化大家的加分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.hypermn.cn/image-20201219192317027.png&#34; alt=&#34;image-20201219192317027&#34;&gt;&lt;/p&gt;
&lt;p&gt;这个公式颇有些制裁加分狂魔的意味——如果你的加分高出你们学院加分平均值两倍的时候，溢出的分数就没用了。但是，能参加保研加分认定的同学本身就是年级里比较优秀的同学了，更别提很多学院都有大家人均都有的基础分，会导致大家的加分极为接近，那么公式的前一项根本拿不到多少。而没有基础分的学院，如果你一点加分都没有，那么前一项直接会扣十分。于是，公式一出大家都纷纷提出质疑，可笑的是老师一边承认公式确实有同学们提出的问题，但丝毫没有修改的意思。于是这个明明占比20%的“加分项”分数却分布在[-10,20]，也就是说加分项很可能不但不加分反要扣分。然而现实就是这么发生了，我们系一位排名7%手握清华复旦优营的同学就因为诡异的加分方式失去了保研名额。&lt;/p&gt;
&lt;p&gt;曾经设想过有同学在将要痛失保研名额的时候，可能会歇斯底里，为综排争取个鸡飞狗跳。不过当综合排名真正公示的时候，大家都很平静地接受了这个事实。&lt;/p&gt;
&lt;p&gt;十一假期的时候，递补的同学还在苦苦等待学院能再争取一些名额，不过当10月8号回来的时候，仍然没有递补的消息，等到他们去问教务老师的时候，才发现一切已经尘埃落定，保研的名单已经上呈教育部了，若非手眼通天，连一点挣扎的机会也不存在了。&lt;/p&gt;
&lt;h1 id=&#34;找工作&#34;&gt;找工作&lt;/h1&gt;
&lt;p&gt;八月底开始，一来学校直接焦虑++，虽然心里觉得自己在保研边缘的范围，但对保研不报太大希望了，能保就本校，保不上准备找个班上（笑）。因为前两年做的大部分项目我担任的都是前端开发的角色，于是咨询了阿里的邱学长关于前端的一些问题，然后开始痛补前端知识。天天差不多除了认真学JavaScript就是对着前端面经理解+背。但是最后真正去投了快手去面试之后，才发现开始准备的已经太晚，知识的漏洞像筛子一样处处需要补，秋招上岸希望渺茫…于是基本处于放飞自我状态，每天除了学会前端，就是和保清华人大的同学吃吃喝喝。还好最后保研上岸了，不然估计春招时候估计挺想哭的。&lt;/p&gt;
&lt;p&gt;真的觉得保研不一定稳（保研了也只能保本校附近学校）的同学，真心建议大家提前刷下算法，大三下学期前，看看面经准备一下大厂的日常/暑期实习。工作真的不是一条不光彩的路，尤其是今年看了最先上岸的大伙的总包只有羡慕的份…&lt;/p&gt;
&lt;h1 id=&#34;预推免&#34;&gt;预推免&lt;/h1&gt;
&lt;p&gt;预推免基本在9月中下旬就开始了，但是当时的吴院根本还没出保研名额的准信，于是很多同学也因此错失了报名一些预推免学校的机会（包括本校…挺离谱）。不过我整个9月我已经沉浸在找工作的氛围中了，没有报任何学校的预推免，当时的想法是预推免翻身去华五的机会已经不大了，不如能保就保联系好的本校老师，这样至少可以确保方向是自己喜欢的以及导师的人品有保证。&lt;/p&gt;
&lt;p&gt;不过周围有同学也是预推免等到了心仪学校的offer，但绝大多数还是夏令营定了最后去向。&lt;/p&gt;
&lt;h1 id=&#34;一些闲谈&#34;&gt;一些闲谈&lt;/h1&gt;
&lt;p&gt;其他学院的很多同学倒是（看起来）没有我院这么焦虑，据了解，计院的同学也有一些只是随缘交了保研材料，没想到就真的保上了，因为成绩靠前的挺多人还是选择了出国或者直接去工作，然后忽然保上的同学又要面临选择导师的烦恼233。&lt;/p&gt;
&lt;p&gt;包括但不限于sjtu、hitsz、fdu、sysu、中科院自所的cs夏令营时自视甚高，基本只收了overqualified的选手，然后这些选手们大部分还是去了高一档的学校。等到预推免的时候waiting list都快被鸽穿了，疯狂地打电话，各种群发广告招人，当时看到也是蛮搞笑的一件事。果然双方都是海王的时候选择占劣势地位的学校还是受害的一方。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://image.hypermn.cn/QQ%E5%9B%BE%E7%89%8720201219201756.jpg&#34; alt=&#34;QQ图片20201219201756&#34;&gt;&lt;/p&gt;
- http://www.hypermn.cn/posts/%E5%85%B3%E4%BA%8E%E5%B7%9D%E5%A4%A7%E4%BF%9D%E7%A0%94%E7%9A%84%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B/ - 2018-2022 HyperMn</description>
        </item>
    
    
  </channel>
</rss> 